/** Copyright 2015-2016 IBM Corporation** Licensed under the Apache License, Version 2.0 (the "License");* you may not use this file except in compliance with the License.* You may obtain a copy of the License at** http://www.apache.org/licenses/LICENSE-2.0** Unless required by applicable law or agreed to in writing, software* distributed under the License is distributed on an "AS IS" BASIS,* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.* See the License for the specific language governing permissions and* limitations under the License.*//** *  Action to Send Push Notification using IBM Push Notifications service * *  @param {string} appId - appId to create webhook. *  @param {string} appSecret - appSecret of the application. *  @param {string} version - This is the version of the Tone analyzer service . *  @param {object} message - The test value that is passing to the Tone analyzer service as user Input. *  @param {string} cloudantUserName - Your cloudant username. This is for accessing your `mood` database in cloudant. *  @param {object} cloudantPassword - Your cloudant password. This is for accessing your `mood` database in cloudant. *  @param {string} appRegion - Region where your bluemix app is hosted. Eg for US Dallas -`.ng.bluemix.net`. *  @param {string} deviceIds - The deviceId to which the message need to be send. This data will come from the `complaints` database. *  @param {string} name - Name of the customer. This data will come from the `complaints` database. *  @param {string} time - Time interval you need to add. *  @return {object} whisk async.*/var request = require('request');function main(message) {  console.log("Trigger feed params: ", message);  // Parameters for tone analyzer  var version = message.version;  var userInput = message.message;  var toneMessage = {text:userInput};  var toneData = JSON.stringify(toneMessage);  // params for Cloudant  var cloudantUserName = message.cloudantUserName;  var cloudantPassword = message.cloudantPassword;  // parameters for push notification.  var appSecret = message.appSecret;  var appId = message.appId;  var appRegion = message.appRegion;  var array2 = message.deviceIds;  var name = message.name;  //var time = message.time;  var url = "https://watson-api-explorer.mybluemix.net/tone-analyzer/api/v3/tone?version="+version;  var options = {    method: 'POST',    url: url,    headers: {      'Accept': 'application/json',      'Content-Type': 'application/json'    },    body:toneData  };  request(options, function(error, response, body){    if (error) {      return whisk.error();    }    var obj = JSON.parse(body);    var dic = obj.document_tone.tone_categories[0];    var array = dic.tones;    var array2 = [];    var index = 0;    var value = 0;    for (var i = 0; i < array.length; i++) {      if(value <= array[i].score*100) {        value = array[i].score*100;        console.log("Index is :"+i+"Value is : "+array[i].score*100);        index = i;      }    }    var mood = array[index].tone_name;    console.log("Mood is :"+mood);    var url = "https://"+cloudantUserName+":"+cloudantPassword+"@"+cloudantUserName+".cloudant.com/mood/_design/moodPick/_view/new_view?keys=[\""+mood+"\"]";    var options = {      method: 'GET',      url: url    };    var request = require('request');    request(options, function(error, response, body){      if (error) {        return whisk.error();      }      var obj = JSON.parse(body);      var array = obj.rows;      var text;      console.log("Message : "+body);      array.forEach(function(item) {        text = item.value;      })      var intro = "Hi "+name+" ";      intro += text;      console.log("Text Message : "+intro);           var sendMessage = {message:{alert:intro},target:{deviceIds:array2}};      var bodyData = JSON.stringify(sendMessage);      var request2 = require('request');      setTimeout(function(){        request2({          method: 'post',          uri: 'https://imfpush'+appRegion+'/imfpush/v1/apps/'+appId+'/messages',          headers :{            'appSecret': appSecret,            'Accept': 'application/json',            'Accept-Language': 'en-US',            'Content-Type': 'application/json',            'Content-Length': bodyData.length          },          body:bodyData        }, function(error, response, body) {          if(error){            return whisk.error();          }          return whisk.done({pushResponse: JSON.stringify(body, undefined, 4)});        });      },1000)    });  });  return whisk.async();}